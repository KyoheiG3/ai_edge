import 'dart:typed_data';

import 'package:ai_edge_fc/src/proto/local_agents/core/proto/generative_service.pb.dart'
    as pb;

import 'content.dart';
import 'function_call.dart';
import 'part.dart';
import 'package:collection/collection.dart';

/// Represents a response from a content generation request.
/// 
/// This class wraps the response from an AI model's content generation,
/// containing one or more candidate responses that the model has generated.
/// Each candidate represents a possible completion or response.
/// 
/// Example usage:
/// ```dart
/// final response = GenerateContentResponse.fromBuffer(responseBuffer);
/// final generatedText = response.text;
/// final functionCall = response.functionCall;
/// ```
final class GenerateContentResponse {
  /// The list of candidate responses generated by the model.
  /// 
  /// Multiple candidates may be returned when the model generates
  /// several possible responses to choose from.
  final List<Candidate> candidates;

  /// Creates a new [GenerateContentResponse] with the given candidates.
  /// 
  /// [candidates] - The list of candidate responses from the model.
  const GenerateContentResponse({required this.candidates});

  /// Creates a [GenerateContentResponse] from a protobuf message.
  /// 
  /// [proto] - The protobuf representation of the response.
  /// Returns a new [GenerateContentResponse] instance.
  factory GenerateContentResponse.fromProto(pb.GenerateContentResponse proto) {
    return GenerateContentResponse(
      candidates: proto.candidates.map(Candidate.fromProto).toList(),
    );
  }

  /// Creates a [GenerateContentResponse] from a binary buffer.
  /// 
  /// [buffer] - The binary buffer containing the serialized protobuf response.
  /// Returns a new [GenerateContentResponse] instance.
  factory GenerateContentResponse.fromBuffer(Uint8List buffer) {
    return GenerateContentResponse.fromProto(
      pb.GenerateContentResponse.fromBuffer(buffer),
    );
  }

  /// Gets the first part from the first candidate's content.
  /// 
  /// This is a convenience method for accessing the primary content part
  /// when you expect a single response.
  Part? get _firstPart {
    return candidates.firstOrNull?.content?.parts.firstOrNull;
  }

  /// Gets the text content from the first candidate's first part.
  /// 
  /// This is a convenience getter for accessing generated text content
  /// when you expect a simple text response.
  /// Returns null if no text content is available.
  String? get text {
    return _firstPart?.text;
  }

  /// Gets the function call from the first candidate's first part.
  /// 
  /// This is a convenience getter for accessing function call content
  /// when the model has generated a function call response.
  /// Returns null if no function call is available.
  FunctionCall? get functionCall {
    return _firstPart?.functionCall;
  }
}

/// Represents a single candidate response from the model.
/// 
/// A candidate contains the actual content generated by the model.
/// Multiple candidates may be returned when the model generates
/// several possible responses.
final class Candidate {
  /// The content of this candidate response.
  /// 
  /// May be null if the candidate doesn't contain valid content.
  final Content? content;

  /// Creates a new [Candidate] with the given content.
  /// 
  /// [content] - The content of this candidate response.
  const Candidate({required this.content});

  /// Creates a [Candidate] from a protobuf message.
  /// 
  /// [candidate] - The protobuf representation of the candidate.
  /// Returns a new [Candidate] instance.
  factory Candidate.fromProto(pb.Candidate candidate) {
    return Candidate(
      content: candidate.hasContent()
          ? Content.fromProto(candidate.content)
          : null,
    );
  }
}
